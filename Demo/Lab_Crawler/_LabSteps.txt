Lab: 以 Node.js 寫作網路爬蟲程式（Crawler）




1.	找出目標資料的 Selector


1.1	用 Chrome 連接 http://www.taipower.com.tw/content/news/news02.aspx


1.2	滑鼠右鍵點按第一則快訊，從快捷功能表選擇最後一項:「檢查」


1.3	滑鼠右鍵點按「<h3>...</h3>」，從快捷功能表選擇「Copy」|「Copy selector」。


1.4	貼入內容到本文件，應該會類似這樣:
#news_box > div.box_list > ul > li:nth-child(1) > a > h3


1.5	去掉 :nth-child(1)，稍後我們會用到這段語法:
#news_box > div.box_list > ul > li > a > h3




2.	安裝相關擴充套件


2.1	C9 功能表 Window | New Terminal，依序輸入下列指令並按下 <Enter> 鍵
npm install request
npm install cheerio
exit

	<Note>
	完成後，在 Workspace 的 node_modules 資料夾裏頭
	應該會多出 request、 cheerio 等資料夾。




3.	以 request 擴充套件抓回網頁


3.1	以編輯器開啟 Lab_Crawler.js，現階段該檔案內容已有下列三行程式:

var fs = require("fs");
var request = require("request");
var cheerio = require("cheerio");


3.2	繼續寫作下列程式:

request({
	url : "http://www.taipower.com.tw/content/news/news02.aspx",
	method : "GET"
}, function(err, r, body) {
	if (err || !body) {
		return;
	}
	fs.writeFileSync("test.txt", body);
	
	process.exit();
});

<Note>呼叫 request() 時，分別傳入什麼參數內容?


3.3	點兩下 Lab_Crawler.js，	然後，點按功能表的「> Run」按鈕。


3.4	Refresh 重新整理後，檢視 test.txt 檔的內容。




4.	以 cheerio 解析網頁內容


4.1	繼續將程式改成這樣:

var fs = require("fs");
var request = require("request");
var cheerio = require("cheerio");

request({
	url : "http://www.taipower.com.tw/content/news/news02.aspx",
	method : "GET"
}, function(err, r, body) {
	var result = [];
	if (err || !body) {
		return;
	}
	var $ = cheerio.load(body);
	// 確認下列 selector 語法是否正確:
	var titles = $("#news_box > div.box_list > ul > li > a > h3");
	for (var i = 0; i < titles.length; i++) {
		result.push($(titles[i]).text());
	}
	fs.writeFileSync("test.txt", JSON.stringify(result));
	
	process.exit();
});


4.2	確認 selector 語法是否與步驟1.5 取得的語法一致。


4.3	點兩下 Lab_Crawler.js，	然後，點按功能表的「> Run」按鈕。


4.4	Refresh 重新整理後，檢視 test.txt 檔的內容。

